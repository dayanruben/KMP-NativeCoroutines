// FILE: annotations.kt

@NativeCoroutines
@Deprecated(message = "This is deprecated 4")
val deprecatedProperty1: Flow<String>
  field = flowOf<String>(value = "OK4")
  get

@NativeCoroutines
@Deprecated(message = "This is deprecated 5", level = DeprecationLevel.WARNING)
val deprecatedProperty2: Flow<String>
  field = flowOf<String>(value = "OK5")
  get

@NativeCoroutines
@Deprecated(message = "This is deprecated 6", replaceWith = ReplaceWith(expression = "deprecatedProperty2", imports = []), level = DeprecationLevel.ERROR)
val deprecatedProperty3: Flow<String>
  field = flowOf<String>(value = "OK6")
  get

@NativeCoroutines
val deprecatedProperty4: MutableStateFlow<String>
  field = MutableStateFlow<String>(value = "OK7")
  @Deprecated(message = "This is deprecated 7")
  get

fun box(): String {
  return runBoxTest(action = local suspend fun BoxTest.<anonymous>() {
    $this$runBoxTest.await<String>(nativeSuspend = deprecatedFunction1Native())
    $this$runBoxTest.await<String>(nativeSuspend = deprecatedFunction2Native())
    $this$runBoxTest.collect<String>(nativeFlow = <get-deprecatedProperty1Native>())
    $this$runBoxTest.collect<String>(nativeFlow = <get-deprecatedProperty2Native>())
    $this$runBoxTest.collect<String>(nativeFlow = <get-deprecatedProperty4Native>(), maxValues = 1)
  }
)
}

@NativeCoroutines
@Deprecated(message = "This is deprecated 1")
suspend fun deprecatedFunction1(): String {
  return "OK1"
}

@NativeCoroutines
@Deprecated(message = "This is deprecated 2", level = DeprecationLevel.WARNING)
suspend fun deprecatedFunction2(): String {
  return "OK2"
}

@NativeCoroutines
@Deprecated(message = "This is deprecated 3", replaceWith = ReplaceWith(expression = "deprecatedFunction2()", imports = []), level = DeprecationLevel.ERROR)
suspend fun deprecatedFunction3(): String {
  return "OK3"
}

// FILE: __GENERATED DECLARATIONS__.kt

var deprecatedProperty4Value: String
  @Deprecated(message = "This is deprecated 7")
  get(): String {
    val tmp_0: MutableStateFlow<String> = <get-deprecatedProperty4>()
    return tmp_0.<get-value>()
  }
  @Deprecated(message = "This is deprecated 7")
  set(value: String) {
    return <get-deprecatedProperty4>().<set-value>(value = value)
  }

@Deprecated(message = "This is deprecated 1")
@ObjCName(name = "deprecatedFunction1")
fun deprecatedFunction1Native(): Function3<@ParameterName(name = "onResult") Function2<String, Unit, Unit>, @ParameterName(name = "onError") Function2<Throwable, Unit, Unit>, @ParameterName(name = "onCancelled") Function2<Throwable, Unit, Unit>, Function0<Unit>> {
  val tmp_1: CoroutineScope? = null
  return nativeSuspend<String>(scope = tmp_1, block = local suspend fun <anonymous>(): String {
    return deprecatedFunction1()
  }
)
}

@Deprecated(message = "This is deprecated 2", level = DeprecationLevel.WARNING)
@ObjCName(name = "deprecatedFunction2")
fun deprecatedFunction2Native(): Function3<@ParameterName(name = "onResult") Function2<String, Unit, Unit>, @ParameterName(name = "onError") Function2<Throwable, Unit, Unit>, @ParameterName(name = "onCancelled") Function2<Throwable, Unit, Unit>, Function0<Unit>> {
  val tmp_2: CoroutineScope? = null
  return nativeSuspend<String>(scope = tmp_2, block = local suspend fun <anonymous>(): String {
    return deprecatedFunction2()
  }
)
}

@Deprecated(message = "This is deprecated 3", level = DeprecationLevel.ERROR)
@ObjCName(name = "deprecatedFunction3")
fun deprecatedFunction3Native(): Function3<@ParameterName(name = "onResult") Function2<String, Unit, Unit>, @ParameterName(name = "onError") Function2<Throwable, Unit, Unit>, @ParameterName(name = "onCancelled") Function2<Throwable, Unit, Unit>, Function0<Unit>> {
  val tmp_3: CoroutineScope? = null
  return nativeSuspend<String>(scope = tmp_3, block = local suspend fun <anonymous>(): String {
    return deprecatedFunction3()
  }
)
}

@Deprecated(message = "This is deprecated 4")
@ObjCName(name = "deprecatedProperty1")
val deprecatedProperty1Native: Function3<@ParameterName(name = "onItem") Function3<String, Function0<Unit>, Unit, Unit>, @ParameterName(name = "onComplete") Function2<Throwable?, Unit, Unit>, @ParameterName(name = "onCancelled") Function2<Throwable, Unit, Unit>, Function0<Unit>>
  get(): Function3<@ParameterName(name = "onItem") Function3<String, Function0<Unit>, Unit, Unit>, @ParameterName(name = "onComplete") Function2<Throwable?, Unit, Unit>, @ParameterName(name = "onCancelled") Function2<Throwable, Unit, Unit>, Function0<Unit>> {
    val tmp_4: CoroutineScope? = null
    val tmp_5: Flow<String> = <get-deprecatedProperty1>()
    return tmp_5.asNativeFlow<String>(scope = tmp_4)
  }

@Deprecated(message = "This is deprecated 5", level = DeprecationLevel.WARNING)
@ObjCName(name = "deprecatedProperty2")
val deprecatedProperty2Native: Function3<@ParameterName(name = "onItem") Function3<String, Function0<Unit>, Unit, Unit>, @ParameterName(name = "onComplete") Function2<Throwable?, Unit, Unit>, @ParameterName(name = "onCancelled") Function2<Throwable, Unit, Unit>, Function0<Unit>>
  get(): Function3<@ParameterName(name = "onItem") Function3<String, Function0<Unit>, Unit, Unit>, @ParameterName(name = "onComplete") Function2<Throwable?, Unit, Unit>, @ParameterName(name = "onCancelled") Function2<Throwable, Unit, Unit>, Function0<Unit>> {
    val tmp_6: CoroutineScope? = null
    val tmp_7: Flow<String> = <get-deprecatedProperty2>()
    return tmp_7.asNativeFlow<String>(scope = tmp_6)
  }

@Deprecated(message = "This is deprecated 6", level = DeprecationLevel.ERROR)
@ObjCName(name = "deprecatedProperty3")
val deprecatedProperty3Native: Function3<@ParameterName(name = "onItem") Function3<String, Function0<Unit>, Unit, Unit>, @ParameterName(name = "onComplete") Function2<Throwable?, Unit, Unit>, @ParameterName(name = "onCancelled") Function2<Throwable, Unit, Unit>, Function0<Unit>>
  get(): Function3<@ParameterName(name = "onItem") Function3<String, Function0<Unit>, Unit, Unit>, @ParameterName(name = "onComplete") Function2<Throwable?, Unit, Unit>, @ParameterName(name = "onCancelled") Function2<Throwable, Unit, Unit>, Function0<Unit>> {
    val tmp_8: CoroutineScope? = null
    val tmp_9: Flow<String> = <get-deprecatedProperty3>()
    return tmp_9.asNativeFlow<String>(scope = tmp_8)
  }

@ObjCName(name = "deprecatedProperty4")
val deprecatedProperty4Native: Function3<@ParameterName(name = "onItem") Function3<String, Function0<Unit>, Unit, Unit>, @ParameterName(name = "onComplete") Function2<Throwable?, Unit, Unit>, @ParameterName(name = "onCancelled") Function2<Throwable, Unit, Unit>, Function0<Unit>>
  @Deprecated(message = "This is deprecated 7")
  get(): Function3<@ParameterName(name = "onItem") Function3<String, Function0<Unit>, Unit, Unit>, @ParameterName(name = "onComplete") Function2<Throwable?, Unit, Unit>, @ParameterName(name = "onCancelled") Function2<Throwable, Unit, Unit>, Function0<Unit>> {
    val tmp_10: CoroutineScope? = null
    val tmp_11: MutableStateFlow<String> = <get-deprecatedProperty4>()
    return tmp_11.asNativeFlow<String>(scope = tmp_10)
  }
